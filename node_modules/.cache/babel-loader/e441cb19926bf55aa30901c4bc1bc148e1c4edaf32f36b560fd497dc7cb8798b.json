{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MSI\\\\game\\\\src\\\\components\\\\Board.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Square from './Square';\nimport './Board.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Board = ({\n  size,\n  onWin\n}) => {\n  _s();\n  const [squares, setSquares] = useState(Array(size * size).fill(null));\n  const [xIsNext, setXIsNext] = useState(true);\n  const [winner, setWinner] = useState(null);\n  useEffect(() => {\n    if (winner) {\n      const timeout = setTimeout(() => {\n        setSquares(Array(size * size).fill(null));\n        setXIsNext(true);\n        setWinner(null);\n      }, 2000); // Очищаем поле через 2 секунды после победы\n\n      return () => clearTimeout(timeout); // Очищаем таймер при размонтировании компонента\n    }\n  }, [winner, size]);\n  const handleClick = (x, y) => {\n    const index = y * size + x;\n    if (squares[index] || winner) {\n      return;\n    }\n    const newSquares = squares.slice();\n    newSquares[index] = xIsNext ? 'X' : 'O';\n    setSquares(newSquares);\n    setXIsNext(!xIsNext);\n    const calculatedWinner = calculateWinner(newSquares, size);\n    if (calculatedWinner) {\n      setWinner(calculatedWinner);\n      onWin(calculatedWinner);\n    }\n  };\n  const renderSquare = (x, y) => {\n    const key = `${x},${y}`;\n    const index = y * size + x;\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: squares[index],\n      onClick: () => handleClick(x, y)\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this);\n  };\n  const renderBoard = () => {\n    const rows = [];\n    for (let y = 0; y < size; y++) {\n      const row = [];\n      for (let x = 0; x < size; x++) {\n        row.push(renderSquare(x, y));\n      }\n      rows.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex'\n        },\n        children: row\n      }, y, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this));\n    }\n    return rows;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board-container\",\n    children: renderBoard()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 10\n  }, this);\n};\n_s(Board, \"tP5/+xo9h4g6OMJ1F6+0X/QbYUY=\");\n_c = Board;\nconst calculateWinner = (squares, size) => {\n  const lines = [];\n\n  // Horizontal lines\n  for (let y = 0; y < size; y++) {\n    for (let x = 0; x <= size - 5; x++) {\n      lines.push([y * size + x, y * size + x + 1, y * size + x + 2, y * size + x + 3, y * size + x + 4]);\n    }\n  }\n\n  // Vertical lines\n  for (let x = 0; x < size; x++) {\n    for (let y = 0; y <= size - 5; y++) {\n      lines.push([y * size + x, (y + 1) * size + x, (y + 2) * size + x, (y + 3) * size + x, (y + 4) * size + x]);\n    }\n  }\n\n  // Diagonal lines\n  for (let y = 0; y <= size - 5; y++) {\n    for (let x = 0; x <= size - 5; x++) {\n      lines.push([y * size + x, (y + 1) * size + x + 1, (y + 2) * size + x + 2, (y + 3) * size + x + 3, (y + 4) * size + x + 4]);\n      lines.push([(y + 4) * size + x, (y + 3) * size + x + 1, (y + 2) * size + x + 2, (y + 1) * size + x + 3, y * size + x + 4]);\n    }\n  }\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c, d, e] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c] && squares[a] === squares[d] && squares[a] === squares[e]) {\n      return squares[a];\n    }\n  }\n  return null;\n};\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useState","useEffect","Square","jsxDEV","_jsxDEV","Board","size","onWin","_s","squares","setSquares","Array","fill","xIsNext","setXIsNext","winner","setWinner","timeout","setTimeout","clearTimeout","handleClick","x","y","index","newSquares","slice","calculatedWinner","calculateWinner","renderSquare","key","value","onClick","fileName","_jsxFileName","lineNumber","columnNumber","renderBoard","rows","row","push","style","display","children","className","_c","lines","i","length","a","b","c","d","e","$RefreshReg$"],"sources":["C:/Users/MSI/game/src/components/Board.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Square from './Square';\r\nimport './Board.css';\r\n\r\ninterface BoardProps {\r\n  size: number;\r\n  onWin: (winner: string) => void;\r\n}\r\n\r\nconst Board: React.FC<BoardProps> = ({ size, onWin }) => {\r\n  const [squares, setSquares] = useState(Array(size * size).fill(null));\r\n  const [xIsNext, setXIsNext] = useState(true);\r\n  const [winner, setWinner] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (winner) {\r\n      const timeout = setTimeout(() => {\r\n        setSquares(Array(size * size).fill(null));\r\n        setXIsNext(true);\r\n        setWinner(null);\r\n      }, 2000); // Очищаем поле через 2 секунды после победы\r\n\r\n      return () => clearTimeout(timeout); // Очищаем таймер при размонтировании компонента\r\n    }\r\n  }, [winner, size]);\r\n\r\n  const handleClick = (x: number, y: number) => {\r\n    const index = y * size + x;\r\n    if (squares[index] || winner) {\r\n      return;\r\n    }\r\n    const newSquares = squares.slice();\r\n    newSquares[index] = xIsNext ? 'X' : 'O';\r\n    setSquares(newSquares);\r\n    setXIsNext(!xIsNext);\r\n\r\n    const calculatedWinner = calculateWinner(newSquares, size);\r\n    if (calculatedWinner) {\r\n      setWinner(calculatedWinner);\r\n      onWin(calculatedWinner);\r\n    }\r\n  };\r\n\r\n  const renderSquare = (x: number, y: number) => {\r\n    const key = `${x},${y}`;\r\n    const index = y * size + x;\r\n    return <Square key={key} value={squares[index]} onClick={() => handleClick(x, y)} />;\r\n  };\r\n\r\n  const renderBoard = () => {\r\n    const rows = [];\r\n    for (let y = 0; y < size; y++) {\r\n      const row = [];\r\n      for (let x = 0; x < size; x++) {\r\n        row.push(renderSquare(x, y));\r\n      }\r\n      rows.push(\r\n        <div key={y} style={{ display: 'flex' }}>\r\n          {row}\r\n        </div>\r\n      );\r\n    }\r\n    return rows;\r\n  };\r\n\r\n  return <div className=\"board-container\">{renderBoard()}</div>;\r\n};\r\n\r\nconst calculateWinner = (squares: (string | null)[], size: number): string | null => {\r\n  const lines = [];\r\n\r\n  // Horizontal lines\r\n  for (let y = 0; y < size; y++) {\r\n    for (let x = 0; x <= size - 5; x++) {\r\n      lines.push([y * size + x, y * size + x + 1, y * size + x + 2, y * size + x + 3, y * size + x + 4]);\r\n    }\r\n  }\r\n\r\n  // Vertical lines\r\n  for (let x = 0; x < size; x++) {\r\n    for (let y = 0; y <= size - 5; y++) {\r\n      lines.push([y * size + x, (y + 1) * size + x, (y + 2) * size + x, (y + 3) * size + x, (y + 4) * size + x]);\r\n    }\r\n  }\r\n\r\n  // Diagonal lines\r\n  for (let y = 0; y <= size - 5; y++) {\r\n    for (let x = 0; x <= size - 5; x++) {\r\n      lines.push([y * size + x, (y + 1) * size + x + 1, (y + 2) * size + x + 2, (y + 3) * size + x + 3, (y + 4) * size + x + 4]);\r\n      lines.push([(y + 4) * size + x, (y + 3) * size + x + 1, (y + 2) * size + x + 2, (y + 1) * size + x + 3, y * size + x + 4]);\r\n    }\r\n  }\r\n\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c, d, e] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c] && squares[a] === squares[d] && squares[a] === squares[e]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n};\r\n\r\nexport default Board;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}