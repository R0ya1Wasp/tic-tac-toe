{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MSI\\\\game\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Board from './components/Board';\nimport Modal from './components/Modal';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [size, setSize] = useState(15);\n  const [winner, setWinner] = useState(null);\n  const [reset, setReset] = useState(false);\n  const handleWin = winner => {\n    setWinner(winner);\n  };\n  const closeModal = () => {\n    setWinner(null);\n    setReset(true);\n  };\n  const onResetComplete = () => {\n    setReset(false);\n  };\n  const handleReset = () => {\n    setReset(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Infinite Tic-Tac-Toe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Board, {\n      size: size,\n      onWin: handleWin,\n      reset: reset,\n      onResetComplete: onResetComplete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: winner !== null,\n      message: `${winner} wins!`,\n      onClose: closeModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"reset-button\",\n      onClick: handleReset,\n      children: \"Reset Board\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"v4gTl1H3fYJ3KqEv5d09Zi0yWKQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Board","Modal","jsxDEV","_jsxDEV","App","_s","size","setSize","winner","setWinner","reset","setReset","handleWin","closeModal","onResetComplete","handleReset","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onWin","show","message","onClose","onClick","_c","$RefreshReg$"],"sources":["C:/Users/MSI/game/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport Board from './components/Board';\nimport Modal from './components/Modal';\nimport './App.css';\n\nconst App: React.FC = () => {\n  const [size, setSize] = useState(15);\n  const [winner, setWinner] = useState<string | null>(null);\n  const [reset, setReset] = useState(false);\n\n  const handleWin = (winner: string) => {\n    setWinner(winner);\n  };\n\n  const closeModal = () => {\n    setWinner(null);\n    setReset(true);\n  };\n\n  const onResetComplete = () => {\n    setReset(false);\n  };\n\n  const handleReset = () => {\n    setReset(true);\n  };\n\n  return (\n    <div className=\"app-container\">\n      <h1>Infinite Tic-Tac-Toe</h1>\n      <Board size={size} onWin={handleWin} reset={reset} onResetComplete={onResetComplete} />\n      <Modal show={winner !== null} message={`${winner} wins!`} onClose={closeModal} />\n      <button className=\"reset-button\" onClick={handleReset}>Reset Board</button>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,GAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAgB,IAAI,CAAC;EACzD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEzC,MAAMa,SAAS,GAAIJ,MAAc,IAAK;IACpCC,SAAS,CAACD,MAAM,CAAC;EACnB,CAAC;EAED,MAAMK,UAAU,GAAGA,CAAA,KAAM;IACvBJ,SAAS,CAAC,IAAI,CAAC;IACfE,QAAQ,CAAC,IAAI,CAAC;EAChB,CAAC;EAED,MAAMG,eAAe,GAAGA,CAAA,KAAM;IAC5BH,QAAQ,CAAC,KAAK,CAAC;EACjB,CAAC;EAED,MAAMI,WAAW,GAAGA,CAAA,KAAM;IACxBJ,QAAQ,CAAC,IAAI,CAAC;EAChB,CAAC;EAED,oBACER,OAAA;IAAKa,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5Bd,OAAA;MAAAc,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7BlB,OAAA,CAACH,KAAK;MAACM,IAAI,EAAEA,IAAK;MAACgB,KAAK,EAAEV,SAAU;MAACF,KAAK,EAAEA,KAAM;MAACI,eAAe,EAAEA;IAAgB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvFlB,OAAA,CAACF,KAAK;MAACsB,IAAI,EAAEf,MAAM,KAAK,IAAK;MAACgB,OAAO,EAAE,GAAGhB,MAAM,QAAS;MAACiB,OAAO,EAAEZ;IAAW;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjFlB,OAAA;MAAQa,SAAS,EAAC,cAAc;MAACU,OAAO,EAAEX,WAAY;MAAAE,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxE,CAAC;AAEV,CAAC;AAAChB,EAAA,CA9BID,GAAa;AAAAuB,EAAA,GAAbvB,GAAa;AAgCnB,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}