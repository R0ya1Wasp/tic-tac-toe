{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MSI\\\\game\\\\src\\\\components\\\\Board.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Square from './Square';\nimport './Board.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Board = () => {\n  _s();\n  const [squares, setSquares] = useState({});\n  const [isXNext, setIsXNext] = useState(true);\n  const [boardSize, setBoardSize] = useState(20); // Размер отображаемой части доски\n\n  const handleClick = (x, y) => {\n    const key = `${x},${y}`;\n    if (squares[key]) return;\n    const newSquares = {\n      ...squares,\n      [key]: isXNext ? 'X' : 'O'\n    };\n    setSquares(newSquares);\n    setIsXNext(!isXNext);\n    checkWinner(newSquares, x, y);\n  };\n  const checkWinner = (squares, x, y) => {\n    const directions = [{\n      dx: 1,\n      dy: 0\n    },\n    // Horizontal\n    {\n      dx: 0,\n      dy: 1\n    },\n    // Vertical\n    {\n      dx: 1,\n      dy: 1\n    },\n    // Diagonal \\\n    {\n      dx: 1,\n      dy: -1\n    } // Diagonal /\n    ];\n    const currentPlayer = isXNext ? 'X' : 'O';\n    for (const {\n      dx,\n      dy\n    } of directions) {\n      let count = 1;\n      for (let i = 1; i < 5; i++) {\n        if (squares[`${x + i * dx},${y + i * dy}`] === currentPlayer) count++;else break;\n      }\n      for (let i = 1; i < 5; i++) {\n        if (squares[`${x - i * dx},${y - i * dy}`] === currentPlayer) count++;else break;\n      }\n      if (count >= 5) {\n        alert(`${currentPlayer} wins!`);\n        setSquares({});\n        break;\n      }\n    }\n  };\n  const renderSquare = (x, y) => {\n    const key = `${x},${y}`;\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: squares[key],\n      onClick: () => handleClick(x, y)\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }, this);\n  };\n  const renderBoard = () => {\n    const rows = [];\n    for (let y = -boardSize / 2; y < boardSize / 2; y++) {\n      const row = [];\n      for (let x = -boardSize / 2; x < boardSize / 2; x++) {\n        row.push(renderSquare(x, y));\n      }\n      rows.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: row\n      }, y, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this));\n    }\n    return rows;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board-container\",\n    children: renderBoard()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 10\n  }, this);\n};\n_s(Board, \"SHOtYhNzMbPLIA8Y0y8KAUCpMp0=\");\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useState","Square","jsxDEV","_jsxDEV","Board","_s","squares","setSquares","isXNext","setIsXNext","boardSize","setBoardSize","handleClick","x","y","key","newSquares","checkWinner","directions","dx","dy","currentPlayer","count","i","alert","renderSquare","value","onClick","fileName","_jsxFileName","lineNumber","columnNumber","renderBoard","rows","row","push","className","children","_c","$RefreshReg$"],"sources":["C:/Users/MSI/game/src/components/Board.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Square from './Square';\r\nimport './Board.css';\r\n\r\nconst Board: React.FC = () => {\r\n  const [squares, setSquares] = useState<{ [key: string]: string | null }>({});\r\n  const [isXNext, setIsXNext] = useState(true);\r\n  const [boardSize, setBoardSize] = useState(20); // Размер отображаемой части доски\r\n\r\n  const handleClick = (x: number, y: number) => {\r\n    const key = `${x},${y}`;\r\n    if (squares[key]) return;\r\n\r\n    const newSquares = { ...squares, [key]: isXNext ? 'X' : 'O' };\r\n    setSquares(newSquares);\r\n    setIsXNext(!isXNext);\r\n    checkWinner(newSquares, x, y);\r\n  };\r\n\r\n  const checkWinner = (squares: { [key: string]: string | null }, x: number, y: number) => {\r\n    const directions = [\r\n      { dx: 1, dy: 0 }, // Horizontal\r\n      { dx: 0, dy: 1 }, // Vertical\r\n      { dx: 1, dy: 1 }, // Diagonal \\\r\n      { dx: 1, dy: -1 } // Diagonal /\r\n    ];\r\n\r\n    const currentPlayer = isXNext ? 'X' : 'O';\r\n\r\n    for (const { dx, dy } of directions) {\r\n      let count = 1;\r\n\r\n      for (let i = 1; i < 5; i++) {\r\n        if (squares[`${x + i * dx},${y + i * dy}`] === currentPlayer) count++;\r\n        else break;\r\n      }\r\n\r\n      for (let i = 1; i < 5; i++) {\r\n        if (squares[`${x - i * dx},${y - i * dy}`] === currentPlayer) count++;\r\n        else break;\r\n      }\r\n\r\n      if (count >= 5) {\r\n        alert(`${currentPlayer} wins!`);\r\n        setSquares({});\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  const renderSquare = (x: number, y: number) => {\r\n    const key = `${x},${y}`;\r\n    return <Square key={key} value={squares[key]} onClick={() => handleClick(x, y)} />;\r\n  };\r\n\r\n  const renderBoard = () => {\r\n    const rows = [];\r\n    for (let y = -boardSize / 2; y < boardSize / 2; y++) {\r\n      const row = [];\r\n      for (let x = -boardSize / 2; x < boardSize / 2; x++) {\r\n        row.push(renderSquare(x, y));\r\n      }\r\n      rows.push(\r\n        <div key={y} className=\"board-row\">\r\n          {row}\r\n        </div>\r\n      );\r\n    }\r\n    return rows;\r\n  };\r\n\r\n  return <div className=\"board-container\">{renderBoard()}</div>;\r\n};\r\n\r\nexport default Board;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}